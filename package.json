{
  "name": "react-geosuggest",
  "version": "2.14.0",
  "description": "A React autosuggest for the Google Maps Places API.",
  "main": "module/Geosuggest.umd.js",
  "module": "module/Geosuggest.esm.js",
  "author": "Robert Katzki <katzki@ubilabs.net>",
  "homepage": "https://github.com/ubilabs/react-geosuggest",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ubilabs/react-geosuggest.git"
  },
  "bugs": {
    "url": "https://github.com/ubilabs/react-geosuggest/issues"
  },
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0 || ^16.0.0",
    "react-dom": "^0.14.0 || ^15.0.0 || ^16.0.0"
  },
  "dependencies": {
    "classnames": "^2.2.6",
    "lodash.debounce": "^4.0.6"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^11.0.2",
    "@rollup/plugin-node-resolve": "^7.1.1",
    "@rollup/plugin-replace": "^2.3.1",
    "@types/chai": "^4.2.11",
    "@types/classnames": "^2.2.10",
    "@types/googlemaps": "^3.39.3",
    "@types/jsdom": "^16.2.0",
    "@types/lodash.debounce": "^4.0.6",
    "@types/mocha": "^7.0.2",
    "@types/react": "^16.9.32",
    "@types/react-dom": "^16.9.6",
    "@types/sinon": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^2.26.0",
    "@typescript-eslint/parser": "^2.26.0",
    "chai": "^4.2.0",
    "conventional-changelog-generator": "0.0.3",
    "copyfiles": "^2.2.0",
    "cross-env": "^7.0.2",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-plugin-react": "^7.19.0",
    "gh-pages": "^2.2.0",
    "jsdom": "^16.2.2",
    "light-server": "^2.6.4",
    "mkdirp": "^1.0.3",
    "mocha": "^7.1.1",
    "nodecat": "^2.0.0",
    "nyc": "^15.0.0",
    "prettier": "^2.0.2",
    "prop-types": "^15.7.2",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "rimraf": "^3.0.2",
    "rollup": "^2.3.2",
    "rollup-plugin-peer-deps-external": "^2.2.2",
    "rollup-plugin-typescript2": "^0.27.0",
    "rollup-plugin-uglify": "^6.0.4",
    "sinon": "^9.0.1",
    "ts-node": "^8.8.1",
    "typescript": "^3.8.3"
  },
  "scripts": {
    "prepublishOnly": "npm run build:module",
    "lint": "eslint ./src/*.tsx ./src/*.ts ./example/src/*.tsx ./test/*.tsx ./test/*.ts ./test/fixtures/*.ts",
    "pretest": "npm run js:prettier:ci && npm run lint",
    "test": "nyc --include 'src/*' -e .tsx -s npm run unit-test",
    "posttest": "nyc report --reporter=text --reporter=lcov --reporter=html",
    "start": "npm run server",
    "unit-test": "mocha --require ts-node/register --require ./test/test_helper.ts \"test/**/*@(.ts|.tsx)\"",
    "server": "npm run prepare:example && light-server -s example/dist -p 8000 -w 'src/*.tsx,src/*.ts,example/src/*.tsx,example/src/*.ts # npm run js:example' -w 'src/*.css,example/src/*.css # npm run css # reloadcss' -w 'example/src/*.html # npm run copy:assets # reload'",
    "prepare:example": "rimraf example/dist && mkdirp example/dist && npm run copy:assets && npm run js:example && npm run css",
    "copy:assets": "copyfiles -f example/src/*.html example/dist && copyfiles -f example/src/*.svg example/dist",
    "css": "nodecat example/src/app.css src/geosuggest.css > example/dist/app.css",
    "js:example": "rollup -c rollup.example.config.js",
    "js:prettier:ci": "prettier --config ./.prettierrc.yml --ignore-path ./.prettierignore --list-different \"**/**.{ts,tsx}\"",
    "js:prettier:fix": "prettier --config ./.prettierrc.yml --ignore-path ./.prettierignore --write \"**/**.{ts,tsx}\"",
    "build:module": "rimraf module && cross-env NODE_ENV=production rollup -c rollup.module.config.js && copyfiles -f src/geosuggest.css module/",
    "build:browser": "rimraf dist && rollup -c rollup.browser.config.js && cross-env NODE_ENV=production rollup -c rollup.browser.config.js",
    "build:example": "cross-env NODE_ENV=production rollup -c rollup.example.config.js",
    "release:patch": "npm version patch -m \"chore(release): version %s\"",
    "release:minor": "npm version minor -m \"chore(release): version %s\"",
    "release:major": "npm version major -m \"chore(release): version %s\"",
    "changelog": "conventional-changelog-generator",
    "preversion": "npm test",
    "version": "npm run build:browser && npm run changelog && git add .",
    "postversion": "git push && git push --tags && npm run publish:example",
    "publish:example": "npm run build:example && gh-pages -d example/dist"
  },
  "readmeFilename": "README.md",
  "keywords": [
    "react",
    "react-component",
    "google",
    "autosuggest",
    "autocomplete",
    "places"
  ]
}
